package Thread;

import java.util.LinkedList;
import java.util.Queue;

public class PC {
	int max = 0;
	Object notEmpty = new Object();
	Object notFull = new Object();
	Queue<Integer> queue = new LinkedList<Integer>();

	public PC(int max) {
		this.max = max;
	}

	public synchronized void produce(int m) throws InterruptedException {
		while (queue.size() == max)
			notFull.wait();
		queue.add(m);
		notEmpty.notifyAll();
	}

	public synchronized int take() throws InterruptedException {
		while (queue.size() == 0)
			notEmpty.wait();
		int m = queue.poll();
		notFull.notifyAll();
		return m;
	}
}
